/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Text: THREE.Mesh;
  };
  materials: {
    Bag: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
  };
};

export default function Bag({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF("./models/bag.glb") as GLTFResult;
  return (
    <group
      ref={group}
      rotation={[0, -Math.PI / 2, 0]}
      {...props}
      dispose={null}
    >
      <mesh geometry={nodes.Cube.geometry} material={materials.Bag} />
      <mesh
        geometry={nodes.Text.geometry}
        material={materials.Material}
        position={[0.51, 1.18, -0.03]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.29}
      />
    </group>
  );
}

useGLTF.preload("./models/bag.glb");
